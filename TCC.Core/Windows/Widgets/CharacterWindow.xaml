<w:TccWidget x:Class="TCC.Windows.Widgets.CharacterWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:w="clr-namespace:TCC.Windows"
        xmlns:converters="clr-namespace:TCC.Converters"
        xmlns:vm="clr-namespace:TCC.ViewModels"
        xmlns:c="clr-namespace:TCC.Controls"
        xmlns:elements="clr-namespace:TCC.Controls.Classes.Elements"
        mc:Ignorable="d"
        Title="HPbar" 
        Style="{StaticResource BaseWindowStyle}"
        MouseLeftButtonDown="Drag"
        >
    <w:TccWidget.DataContext>
        <vm:CharacterWindowViewModel/>
    </w:TccWidget.DataContext>
    <w:TccWidget.Resources>
        <converters:ClassToReColorConverter x:Key="ReColorConverter"/>
        <Style TargetType="Border">
            <Setter Property="BorderBrush"                Value="{StaticResource RevampBorderBrush}"/>
            <Setter Property="BorderThickness"            Value="2 1" />
            <Setter Property="Height"                     Value="Auto"/>
            <Setter Property="VerticalAlignment"          Value="Top"/>
            <Setter Property="Background"                 Value="#b223"/>
            <Setter Property="RenderTransformOrigin"      Value="0 0"/>
        </Style>
        <converters:StaminaBarVisibilityConverter x:Key="StaminaVisConv"/>
    </w:TccWidget.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Name="WindowContent" Grid.Row="1">
            <Grid.LayoutTransform>
                <ScaleTransform ScaleX="{Binding WindowSettings.Scale, RelativeSource={RelativeSource AncestorType=w:TccWidget}}" 
                            ScaleY="{Binding WindowSettings.Scale, RelativeSource={RelativeSource AncestorType=w:TccWidget}}"/>
            </Grid.LayoutTransform>
            <Grid Margin="25 20 10 20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Instance.CompactMode}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             To="0" Duration="0:0:0.0"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             To="1" Duration="0:0:0.3" BeginTime="0:0:0.0"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             To="0" Duration="0:0:0.0"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             To="1" Duration="0:0:0.3" BeginTime="0:0:0.0"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <!--HP-->
                <Border RenderTransform="{StaticResource Skew45Inv}" Padding="3 2" >
                    <Grid x:Name="HpGrid">
                        <Border VerticalAlignment="Top" BorderThickness="0"  Margin="0" Opacity=".65">
                            <Border.Background>
                                <SolidColorBrush Color="{Binding Instance.Player.IsDebuffed, Converter={StaticResource DebuffStatusToHpColor}}"/>
                            </Border.Background>
                            <FrameworkElement x:Name="HpGovernorWhite" HorizontalAlignment="Stretch" 
                                              Width="{Binding ElementName=HpGrid, Path=ActualWidth}">
                                <FrameworkElement.LayoutTransform>
                                    <ScaleTransform ScaleX="1"/>
                                </FrameworkElement.LayoutTransform>
                            </FrameworkElement>
                            <Border.Style>
                                <Style TargetType="Border" BasedOn="{StaticResource {x:Type Border}}">
                                    <Style.Setters>
                                        <Setter Property="Height" Value="12"/>
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                    </Style.Setters>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Instance.CompactMode}" Value="False">
                                            <Setter Property="HorizontalAlignment" Value="Right"/>
                                            <Setter Property="Height" Value="10"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>

                        <Border VerticalAlignment="Top" BorderThickness="0"  Margin="0" Opacity="1">
                            <FrameworkElement x:Name="HpGovernor" HorizontalAlignment="Stretch" 
                                              Width="{Binding ElementName=HpGrid, Path=ActualWidth}">
                                <FrameworkElement.LayoutTransform>
                                    <ScaleTransform ScaleX="1"/>
                                </FrameworkElement.LayoutTransform>
                            </FrameworkElement>
                            <Border.Style>
                                <Style TargetType="Border" BasedOn="{StaticResource {x:Type Border}}">
                                    <Style.Setters>
                                        <Setter Property="Height" Value="12"/>
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <LinearGradientBrush EndPoint="1 0">
                                                    <GradientStop Offset=".6" Color="{Binding Instance.Player.IsDebuffed, Converter={StaticResource DebuffStatusToHpColor}}"></GradientStop>
                                                    <GradientStop Offset="1" Color="{Binding Instance.Player.IsDebuffed, Converter={StaticResource DebuffStatusToHpColor2}}"></GradientStop>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </Style.Setters>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Instance.CompactMode}" Value="False">
                                            <Setter Property="HorizontalAlignment" Value="Right"/>
                                            <Setter Property="Height" Value="10"/>
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="1 0">
                                                        <GradientStop Offset=".4" Color="{Binding Instance.Player.IsDebuffed, Converter={StaticResource DebuffStatusToHpColor}}"></GradientStop>
                                                        <GradientStop Offset="0" Color="{Binding Instance.Player.IsDebuffed, Converter={StaticResource DebuffStatusToHpColor2}}"></GradientStop>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>

                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                    </Grid>
                    <Border.Style>
                        <Style TargetType="Border" BasedOn="{StaticResource {x:Type Border}}">
                            <Style.Setters>
                                <Setter Property="Grid.Column" Value="2"/>
                                <Setter Property="Margin" Value="-18 31 18 0"/>
                                <Setter Property="Width" Value="350"/>
                            </Style.Setters>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Instance.CompactMode}" Value="False">
                                    <Setter Property="Grid.Column" Value="0"/>
                                    <Setter Property="Margin" Value="0 50 0 0"/>
                                    <Setter Property="Width" Value="300"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
                <!--SH-->
                <Border Visibility="{Binding Instance.Player.HasShield, Converter={StaticResource BoolToVisibleCollapsed}}" 
                    Padding="3 2" >
                    <Grid x:Name="ShGrid">
                        <Border VerticalAlignment="Top" BorderThickness="0" Height="8" Margin="0" >
                            <FrameworkElement x:Name="ShGovernor" HorizontalAlignment="Stretch" Width="{Binding ElementName=ShGrid, Path=ActualWidth}">
                                <FrameworkElement.LayoutTransform>
                                    <ScaleTransform ScaleX="1"/>
                                </FrameworkElement.LayoutTransform>
                            </FrameworkElement>
                            <Border.Style>
                                <Style TargetType="Border" BasedOn="{StaticResource {x:Type Border}}">
                                    <Style.Setters>
                                        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <LinearGradientBrush EndPoint="1 0">
                                                    <GradientStop Color="#00ff7f" Offset="1"/>
                                                    <GradientStop Color="#018743" Offset=".6"/>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </Style.Setters>

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Instance.CompactMode}" Value="False">
                                            <Setter Property="HorizontalAlignment" Value="Right"></Setter>
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="1 0">
                                                        <GradientStop Color="#00ff7f" Offset="0"/>
                                                        <GradientStop Color="#018743" Offset=".4"/>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>

                        </Border>
                    </Grid>
                    <Border.Style>
                        <Style TargetType="Border" BasedOn="{StaticResource {x:Type Border}}">
                            <Style.Setters>
                                <Setter Property="Grid.Column" Value="2"/>
                                <Setter Property="Width" Value="350"/>
                                <Setter Property="RenderTransform" Value="{StaticResource Skew45Inv}"/>
                                <Setter Property="Margin" Value="-33 16 33 0"/>
                            </Style.Setters>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Instance.CompactMode}" Value="False">
                                    <Setter Property="Width" Value="300"/>
                                    <Setter Property="Grid.Column" Value="0"/>
                                    <Setter Property="Margin" Value="14 65 -14 0"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>

                </Border>
                <!--MP/RE-->
                <Border Grid.Column="2" RenderTransform="{StaticResource Skew45}" Margin="0 50 0 0" Padding="3 2">
                    <Grid x:Name="MpReGrid">
                        <StackPanel>
                            <!--MP-->
                            <Grid>
                                <Border Background="{StaticResource MpBrush}" Opacity=".5" VerticalAlignment="Top" BorderThickness="0"
                                HorizontalAlignment="Left"  Margin="0"
                                 BorderBrush="{StaticResource RevampBorderBrush}">
                                    <Border.Style>
                                        <Style TargetType="Border" BasedOn="{StaticResource {x:Type Border}}">
                                            <Style.Setters>
                                                <Setter Property="Height" Value="12"/>
                                            </Style.Setters>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Instance.CompactMode}" Value="False">
                                                    <Setter Property="Height" Value="10"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <FrameworkElement x:Name="MpGovernorWhite" HorizontalAlignment="Stretch" Width="{Binding ElementName=MpReGrid, Path=ActualWidth}">
                                        <FrameworkElement.LayoutTransform>
                                            <ScaleTransform ScaleX="1"/>
                                        </FrameworkElement.LayoutTransform>
                                    </FrameworkElement>
                                </Border>
                                <Border  VerticalAlignment="Top" BorderThickness="0"
                                HorizontalAlignment="Left"  Margin="0"
                                 BorderBrush="{StaticResource RevampBorderBrush}">
                                    <Border.Style>
                                        <Style TargetType="Border" BasedOn="{StaticResource {x:Type Border}}">
                                            <Style.Setters>
                                                <Setter Property="Height" Value="12"/>
                                            </Style.Setters>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Instance.CompactMode}" Value="False">
                                                    <Setter Property="Height" Value="10"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>

                                    <FrameworkElement x:Name="MpGovernor" HorizontalAlignment="Stretch" Width="{Binding ElementName=MpReGrid, Path=ActualWidth}">
                                        <FrameworkElement.LayoutTransform>
                                            <ScaleTransform ScaleX="1"/>
                                        </FrameworkElement.LayoutTransform>
                                    </FrameworkElement>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="1 0">
                                            <GradientStop Color="{StaticResource MpColorLight}" Offset=".9"></GradientStop>
                                            <GradientStop Color="{StaticResource MpColor}" Offset="0"></GradientStop>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Grid>
                            <!--RE-->
                            <Grid>
                                <Border Background="#ddd" BorderBrush="#aaa" VerticalAlignment="Top" BorderThickness="0"
                                    HorizontalAlignment="Left" Height="5" Margin="0 3 0 0"  Opacity=".3"
                                    Visibility="{Binding Instance.Player.Class, Converter={StaticResource StaminaVisConv}}">
                                    <FrameworkElement x:Name="StGovernorWhite" HorizontalAlignment="Stretch" Width="{Binding ElementName=MpReGrid, Path=ActualWidth}">
                                        <FrameworkElement.LayoutTransform>
                                            <ScaleTransform ScaleX="1"/>
                                        </FrameworkElement.LayoutTransform>
                                    </FrameworkElement>
                                </Border>
                                <Border Background="#ddd" BorderBrush="#aaa" VerticalAlignment="Top" BorderThickness="0"
                                    HorizontalAlignment="Left" Height="5" Margin="0 3 0 0" 
                                    Visibility="{Binding Instance.Player.Class, Converter={StaticResource StaminaVisConv}}">
                                    <FrameworkElement x:Name="StGovernor" HorizontalAlignment="Stretch" Width="{Binding ElementName=MpReGrid, Path=ActualWidth}">
                                        <FrameworkElement.LayoutTransform>
                                            <ScaleTransform ScaleX="1"/>
                                        </FrameworkElement.LayoutTransform>
                                    </FrameworkElement>
                                </Border>
                            </Grid>
                        </StackPanel>
                    </Grid>
                    <Border.Style>
                        <Style TargetType="Border" BasedOn="{StaticResource {x:Type Border}}">
                            <Style.Setters>
                                <Setter Property="Width" Value="350"/>
                            </Style.Setters>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Instance.CompactMode}" Value="False">
                                    <Setter Property="Width" Value="300"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>


                </Border>

                <!--Player Info-->
                <StackPanel Orientation="Horizontal" Margin="0 0 0 35" VerticalAlignment="Bottom" >
                    <c:OutlinedTextBlock VerticalAlignment="Bottom" Text="Lv." Fill="#ccc" StrokeThickness="3" Stroke="#7000"  FontSize="14" FontFamily="{StaticResource Frutiger}"/>
                    <c:OutlinedTextBlock VerticalAlignment="Bottom" Text="{Binding Instance.Player.Level}" Fill="#ccc" StrokeThickness="3" Stroke="#7000"  FontSize="14" FontFamily="{StaticResource Frutiger}"/>
                    <c:OutlinedTextBlock VerticalAlignment="Bottom" Margin="5 0 0 -1" Text="{Binding Instance.Player.Name}" 
                                         Fill="#eee" StrokeThickness="3" Stroke="#7000"  FontSize="16" FontFamily="{StaticResource Frutiger}"/>
                    <Path Data="{StaticResource SvgWeapon}" Width="15" Margin="20 0 3 0" StrokeThickness="2" Stroke="#4223" Fill="#eee" ToolTip="Item level"></Path>
                    <c:OutlinedTextBlock VerticalAlignment="Bottom" Text="{Binding Instance.Player.ItemLevel}" Fill="#ccc" StrokeThickness="3" Stroke="#7000"  FontSize="14" FontFamily="{StaticResource Frutiger}"/>
                    <Path Data="{StaticResource SvgCrossedSwords}" Width="15" Margin="20 0 3 0" StrokeThickness="2" Stroke="#4223" Fill="#eee" ToolTip="Current crit factor"></Path>
                    <c:OutlinedTextBlock VerticalAlignment="Bottom" Text="{Binding Instance.Player.CritFactor, StringFormat={}{0:0}}" Fill="#ccc" StrokeThickness="3" Stroke="#7000" 
                                         FontSize="14" FontFamily="{StaticResource Frutiger}" Margin="0 0 -300 0"/>
                    <StackPanel.Style>
                        <Style TargetType="StackPanel"  >
                            <Setter Property="Grid.Column" Value="2"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Instance.Player.HasShield}" Value="True"/>
                                        <Condition Binding="{Binding Instance.CompactMode}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Opacity" Value=".5"/>

                                        <Setter Property="RenderTransform">
                                            <Setter.Value >
                                                <TranslateTransform X="-20"  Y="-48"/>
                                            </Setter.Value>
                                        </Setter>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Instance.Player.HasShield}" Value="False"/>
                                        <Condition Binding="{Binding Instance.CompactMode}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="RenderTransform">
                                            <Setter.Value >
                                                <TranslateTransform X="20"  Y="20"/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Grid.Column" Value="0"/>

                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Instance.Player.HasShield}" Value="False"/>
                                        <Condition Binding="{Binding Instance.CompactMode}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="RenderTransform">
                                            <Setter.Value >
                                                <TranslateTransform X="-12"  Y="-33"/>
                                            </Setter.Value>
                                        </Setter>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Instance.Player.HasShield}" Value="True"/>
                                        <Condition Binding="{Binding Instance.CompactMode}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="RenderTransform">
                                            <Setter.Value >
                                                <TranslateTransform X="34"  Y="35"/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Grid.Column" Value="0"/>
                                        <Setter Property="Opacity" Value=".5"/>

                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                </StackPanel>

                <!--HP Perc-->
                <c:OutlinedTextBlock VerticalAlignment="Center" Text="{Binding Instance.Player.HpFactor, StringFormat=0.# %}" 
                                     Fill="#eee" StrokeThickness="4" Stroke="#4000" FontSize="16" FontFamily="{StaticResource Frutiger}">
                    <c:OutlinedTextBlock.Style>
                        <Style TargetType="c:OutlinedTextBlock">
                            <Setter Property="Grid.Column" Value="2"/>
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                            <Setter Property="Margin" Value="0 0 30 20"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Instance.CompactMode}" Value="False">
                                    <Setter Property="Grid.Column" Value="0"/>
                                    <Setter Property="Margin" Value="0 0 0 13"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                </DataTrigger>

                            </Style.Triggers>

                        </Style>
                    </c:OutlinedTextBlock.Style>
                </c:OutlinedTextBlock>
                <!--RE Info-->
                <c:OutlinedTextBlock VerticalAlignment="Bottom" Text="{Binding Instance.Player.CurrentST}" 
                                     Visibility="{Binding Instance.Player.Class, Converter={StaticResource StaminaVisConv}}"
                                     Fill="#eee" StrokeThickness="3" Stroke="#3000" FontSize="16" FontFamily="{StaticResource Frutiger}">
                    <c:OutlinedTextBlock.Style>
                        <Style TargetType="c:OutlinedTextBlock">
                            <Setter Property="Grid.Column" Value="2"/>
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                            <Setter Property="Margin" Value="0 0 28 5"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Instance.CompactMode}" Value="False">
                                    <Setter Property="Margin" Value="0 0 25 7"/>
                                </DataTrigger>
                            </Style.Triggers>

                        </Style>
                    </c:OutlinedTextBlock.Style>
                </c:OutlinedTextBlock>

                <!--HP Info-->
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" >
                    <c:OutlinedTextBlock VerticalAlignment="Top" Margin="0 -2 0 0" Text="{Binding Instance.Player.TotalHP}" 
                                        Fill="#eee" StrokeThickness="4" Stroke="#4000" FontSize="16" FontFamily="{StaticResource Frutiger}"/>
                    <c:OutlinedTextBlock VerticalAlignment="Top" Margin="3 0 2 0" Text="/" 
                                        Fill="#ccc" StrokeThickness="4" Stroke="#4000" FontSize="13" FontFamily="{StaticResource Frutiger}"/>
                    <c:OutlinedTextBlock VerticalAlignment="Top" Margin="0 0 0 0" Text="{Binding Instance.Player.MaxHP}" 
                                        Fill="#ccc" StrokeThickness="4" Stroke="#4000" FontSize="13" FontFamily="{StaticResource Frutiger}"/>
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Grid.Column" Value="2"/>
                            <Setter Property="Margin" Value="0 -18 0 0"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Instance.CompactMode}" Value="False">
                                    <Setter Property="Grid.Column" Value="0"/>
                                    <Setter Property="Margin" Value="0 -11 5 0"/>
                                    <Setter Property="HorizontalAlignment" Value="Right"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                </StackPanel>

                <!--MP Info-->
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Grid.Column="2">
                    <c:OutlinedTextBlock VerticalAlignment="Bottom" Margin="0 0 0 -2" Text="{Binding Instance.Player.CurrentMP}" 
                                         Fill="#eee" StrokeThickness="4" Stroke="#4000" FontSize="16" FontFamily="{StaticResource Frutiger}"/>
                    <c:OutlinedTextBlock VerticalAlignment="Bottom" Margin="3 0 2 0" Text="/" 
                                         Fill="#ccc" StrokeThickness="4" Stroke="#4000" FontSize="13" FontFamily="{StaticResource Frutiger}"/>
                    <c:OutlinedTextBlock VerticalAlignment="Bottom" Margin="0 0 0 0" Text="{Binding Instance.Player.MaxMP}" 
                                         Fill="#ccc" StrokeThickness="4" Stroke="#4000" FontSize="13" FontFamily="{StaticResource Frutiger}"/>
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Margin" Value="0 17 0 0"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Instance.CompactMode}" Value="False">
                                    <Setter Property="Margin" Value="5 -14 0 0"/>
                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                </StackPanel>

                <!--SH Info-->
                <StackPanel Orientation="Horizontal" 
                            VerticalAlignment="Bottom" HorizontalAlignment="Center"
                            Visibility="{Binding Instance.Player.HasShield, Converter={StaticResource BoolToVisibleCollapsed}}">
                    <c:OutlinedTextBlock VerticalAlignment="Bottom" Margin="0 0 0 0" Text="{Binding Instance.Player.CurrentShield}" 
                                         Fill="#ddd" StrokeThickness="3" Stroke="#99005723" FontSize="14" FontFamily="{StaticResource Frutiger}"/>
                    <c:OutlinedTextBlock VerticalAlignment="Bottom" Margin="2 0 2 0" Text="/" 
                                         Fill="#ddd" StrokeThickness="3" Stroke="#99005723" FontSize="14" FontFamily="{StaticResource Frutiger}"/>
                    <c:OutlinedTextBlock VerticalAlignment="Bottom" Margin="0 0 0 0" Text="{Binding Instance.Player.MaxShield}" 
                                         Fill="#ddd" StrokeThickness="3" Stroke="#99005723" FontSize="14" FontFamily="{StaticResource Frutiger}"/>
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Margin" Value="10 0 0 68"/>
                            <Setter Property="Grid.Column" Value="2"/>

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Instance.CompactMode}" Value="False">
                                    <Setter Property="Grid.Column" Value="0"/>
                                    <Setter Property="Margin" Value="40 0 0 19"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>


                </StackPanel>

                <!--Class/Laurel-->
                <Grid Grid.Column="1" UseLayoutRounding="False" Width="100" Height="100" Margin="0" >
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <MultiDataTrigger >
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Instance.Player.StFactor}" Value="1"/>
                                        <Condition Binding="{Binding Instance.ShowRe}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect ShadowDepth="0"  
                                                              Color="{Binding Instance.Player.Class , Converter={StaticResource ReColorConverter}, ConverterParameter=color}"
                                                              
                                                              BlurRadius="50"></DropShadowEffect>
                                        </Setter.Value>
                                    </Setter>

                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>

                    <Image Stretch="Uniform">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Setters>
                                    <Setter Property="Source" Value="../../resources/images/char_window_bg.png"/>
                                </Style.Setters>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Instance.ShowElements}" Value="True">
                                        <Setter Property="Source" Value="../../resources/images/char_window_bg_sorc.png"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Image Source="../../resources/images/char_window_fg.png" Stretch="Uniform"/>
                    <c:Arc StrokeThickness="4" StrokeEndLineCap="Flat"
                               Stroke="{Binding Instance.Player.Class, Converter={StaticResource ReColorConverter}, ConverterParameter=light}"
                               HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="ReArc"
                               Width="82" Height="82" StartAngle="42" EndAngle="318"  RenderTransformOrigin=".5 .5" Margin="0" 
                               Rhomb="True">
                        <c:Arc.RenderTransform>
                            <RotateTransform Angle="180"/>
                        </c:Arc.RenderTransform>
                        <c:Arc.Style>
                            <Style TargetType="c:Arc">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Setter Property="Opacity" Value=".8"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Instance.ShowRe}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <DropShadowEffect ShadowDepth="0" 
                                                                  Color="{Binding Instance.Player.Class, Converter={StaticResource ReColorConverter}, ConverterParameter=color}"
                                                                  BlurRadius="10"/>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Instance.Player.StFactor}" Value="1">
                                        <Setter Property="Opacity" Value="1"/>
                                    </DataTrigger>

                                </Style.Triggers>
                            </Style>

                        </c:Arc.Style>
                    </c:Arc>
                    <elements:SorcererElementsControl Fire="{Binding Instance.Player.Fire}"
                                               Ice="{Binding Instance.Player.Ice}"
                                               Arcane="{Binding Instance.Player.Arcane}"
                                               FireBoosted="{Binding Instance.Player.FireBoost}"
                                               IceBoosted="{Binding Instance.Player.IceBoost}"
                                               ArcaneBoosted="{Binding Instance.Player.ArcaneBoost}"
                                               IndicatorsWidth="86"
                                               IndicatorsHeight="86"
                                               FireIceBoostWidth="28"
                                               FireBoostMargin="-6 1 0 0"
                                               IceBoostMargin="0 1 -4 0"
                                               ArcaneBoostWidth="38"
                                               ArcaneBoostMargin="0 -3 0 0"
                                               >
                        <FrameworkElement.Style>
                            <Style TargetType="FrameworkElement">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Instance.ShowElements}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </FrameworkElement.Style>
                    </elements:SorcererElementsControl>
                    <!--<Grid>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Instance.ShowElements}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.Resources>
                            <Style TargetType="c:Arc" >
                                <Setter Property="RenderTransformOrigin" Value=".5 .5"/>
                                <Setter Property="StrokeThickness" Value="8"/>
                                <Setter Property="Width" Value="86"/>
                                <Setter Property="Height" Value="86"/>
                                <Setter Property="Rhomb" Value="True"/>
                            </Style>
                        </Grid.Resources>
                        <c:Arc StartAngle="219" EndAngle="302" Visibility="{Binding Instance.Player.Ice, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <FrameworkElement.RenderTransform>
                                <ScaleTransform ScaleX="-1"></ScaleTransform>
                            </FrameworkElement.RenderTransform>
                            <Shape.Stroke>
                                <RadialGradientBrush GradientOrigin="1 .7" RadiusX="10" RadiusY="10">
                                    <GradientStop Color="{StaticResource IceColor}"></GradientStop>
                                    <GradientStop Color="{StaticResource IceColorLight}" Offset=".1"></GradientStop>
                                </RadialGradientBrush>
                            </Shape.Stroke>
                            <Shape.Effect>
                                <DropShadowEffect Color="{StaticResource IceColor}" ShadowDepth="0" BlurRadius="15"></DropShadowEffect>
                            </Shape.Effect>
                        </c:Arc>
                        <c:Arc StartAngle="219" EndAngle="302" Visibility="{Binding Instance.Player.Fire, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Shape.Stroke>
                                <RadialGradientBrush GradientOrigin="1 .7" RadiusX="10" RadiusY="10">
                                    <GradientStop Color="{StaticResource FireColor}"></GradientStop>
                                    <GradientStop Color="{StaticResource FireColorLight}" Offset=".1"></GradientStop>
                                </RadialGradientBrush>
                            </Shape.Stroke>
                            <Shape.Effect>
                                <DropShadowEffect Color="{StaticResource FireColor}" ShadowDepth="0" BlurRadius="15"></DropShadowEffect>
                            </Shape.Effect>
                        </c:Arc>
                        <c:Arc StartAngle="38" EndAngle="142" Visibility="{Binding Instance.Player.Arcane, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Shape.Stroke>
                                <RadialGradientBrush GradientOrigin=".2 .7" RadiusX="10" RadiusY="10">
                                    <GradientStop Color="{StaticResource ArcaneColor}"></GradientStop>
                                    <GradientStop Color="{StaticResource ArcaneColorLight}" Offset=".1"></GradientStop>
                                </RadialGradientBrush>
                            </Shape.Stroke>
                            <Shape.Effect>
                                <DropShadowEffect Color="{StaticResource ArcaneColor}" ShadowDepth="0" BlurRadius="15"></DropShadowEffect>
                            </Shape.Effect>
                            <Shape.RenderTransform>
                                <RotateTransform Angle="-90"/>
                            </Shape.RenderTransform>
                        </c:Arc>


                    </Grid>-->

                    <Image Opacity="1"
                        Source="{Binding Instance.Player.Laurel, Converter={StaticResource LaurelToImage}, ConverterParameter=kr.big}"
                           Margin="-3 -2 -3 -4"/>
                    <Path Data="{Binding Instance.Player.Class, Converter={StaticResource ClassToSvg}}" 
                      HorizontalAlignment="Center" 
                      Fill="#eee" 
                      Margin="34" 
                      Width="Auto"
                      >
                        <Path.Effect>
                            <DropShadowEffect ShadowDepth="0" Color="{StaticResource MpColorLight}"></DropShadowEffect>
                        </Path.Effect>
                        <Path.RenderTransform>
                            <TranslateTransform Y="0"/>
                        </Path.RenderTransform>
                    </Path>
                    <c:OutlinedTextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Top" Fill="#dfff"
                                         StrokeThickness="4"
                                         Stroke="#6000"
                               FontFamily="{StaticResource Frutiger}" TextAlignment="Center"
                               Margin="0 -18 0 0" FontSize="20" Text="{Binding Instance.Player.CurrentST}"
                               >

                        <c:OutlinedTextBlock.Style>
                            <Style TargetType="c:OutlinedTextBlock">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Instance.ShowRe}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </c:OutlinedTextBlock.Style>

                    </c:OutlinedTextBlock>
                </Grid>
            </Grid>
        </Grid>
        <c:WindowButtons WindowName="Character window" x:Name="Buttons" HorizontalAlignment="Right"
                         DataContext="{Binding WindowSettings, RelativeSource={RelativeSource AncestorType=w:TccWidget}}" />
    </Grid>
    <!--<w:TccWidget.DataContext>
        <vm:CharacterWindowViewModel/>
    </w:TccWidget.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid UseLayoutRounding="True" ClipToBounds="False" Grid.Row="1" Name="content">
            <Grid.LayoutTransform>
                <ScaleTransform ScaleX="{Binding WindowSettings.Scale, RelativeSource={RelativeSource AncestorType=w:TccWidget}}" ScaleY="{Binding WindowSettings.Scale, RelativeSource={RelativeSource AncestorType=w:TccWidget}}"/>
            </Grid.LayoutTransform>
            <Grid.CacheMode>
                <BitmapCache RenderAtScale="2"></BitmapCache>
            </Grid.CacheMode>
            <Grid Margin="25,10,5,5"  Name="RootGrid" ClipToBounds="False">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Border Grid.Row="0" Style="{StaticResource DefaultBorderStyle}" HorizontalAlignment="Center" 
                    VerticalAlignment="Top" Margin="0,0,0,-11" CornerRadius="4" Height="Auto" Padding="5,0,5,6">
                    <Grid VerticalAlignment="Top">
                        <TextBlock Foreground="White" FontSize="13" >
                        <Run Text="L" Foreground="#4fff"></Run>
                        <Run Text="{Binding Mode=OneWay, Path=Player.Level}" Foreground="#afff"></Run>
                        <Run Text="" Foreground="#4fff"></Run>
                        <Run Text="{Binding Mode=OneWay, Path=Player.Name}" FontWeight="DemiBold" FontSize="13"></Run>
                        <Run Text=" ilvl:" Foreground="#4fff"></Run>
                        <Run Text="{Binding Mode=OneWay, Path=Player.ItemLevel}" Foreground="#afff"></Run>
                        </TextBlock>
                    </Grid>
                </Border>

                <Border Grid.Row="1" Width="Auto" Height="Auto" Style="{StaticResource DefaultBorderStyle}" 
                    CornerRadius="8,8,8,8" VerticalAlignment="Center" Opacity="1">
                    <Grid Margin="35,2,1,1" x:Name="BarsMainGrid" Width="350" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Background="#15ffffff" CornerRadius="7" Height="14" Margin="-14,0,0,2"  ></Border>
                        <Border Grid.Row="1" Background="#15ffffff" CornerRadius="7" Height="14" Margin="-14,0,0,0"  ></Border>
                        <Border Grid.Row="2" Background="#15ffffff" CornerRadius="7" Height="14" Margin="-14,2,0,0" Visibility="{Binding Instance.Player.Class, Converter={StaticResource StaminaVisConv}}"/>
                        <Border Grid.Row="0" 
                            Background="{Binding Instance.Player.IsDebuffed, Converter={StaticResource DebuffStatusToHpColor}}" 
                            Height="14" Margin="-14,0,0,2"  
                            VerticalAlignment="Top" 
                            CornerRadius="0,7,7,0" 
                            HorizontalAlignment="Left" 
                            Padding="0,0,14,0"
                            Opacity=".9">
                            <FrameworkElement Width="{Binding ElementName=BarsMainGrid, Path=ActualWidth}" Margin="0,0,0,0">
                                <FrameworkElement.LayoutTransform>
                                    <ScaleTransform ScaleX="{Binding Instance.Player.HpFactor}"/>
                                </FrameworkElement.LayoutTransform>
                            </FrameworkElement>
                        </Border>
                        <Border Grid.Row="0" 
                            Background="MediumSeaGreen" 
                            Height="14" Margin="-14,0,0,2"  
                            VerticalAlignment="Top" 
                            CornerRadius="0,7,7,0" 
                            HorizontalAlignment="Left" 
                            Padding="0,0,14,0"
                            Opacity=".9">
                            <FrameworkElement Width="{Binding ElementName=BarsMainGrid, Path=ActualWidth}" Margin="0,0,0,0">
                                <FrameworkElement.LayoutTransform>
                                    <ScaleTransform ScaleX="{Binding Instance.Player.ShieldFactor}"/>
                                </FrameworkElement.LayoutTransform>
                            </FrameworkElement>
                        </Border>

                        <Border Grid.Row="1" 
                            Background="{StaticResource MpBrush}" 
                            Height="14" 
                            Margin="-14,0,0,0" 
                            VerticalAlignment="Top" 
                            HorizontalAlignment="Left"
                            CornerRadius="0,7,7,0"
                            Padding="0,0,14,0"
                            Opacity=".7">
                            <FrameworkElement Width="{Binding ElementName=BarsMainGrid, Path=ActualWidth}" Margin="0,0,0,0">
                                <FrameworkElement.LayoutTransform>
                                    <ScaleTransform ScaleX="{Binding Instance.Player.MpFactor}"/>
                                </FrameworkElement.LayoutTransform>
                            </FrameworkElement>
                        </Border>
                        <Border Grid.Row="2" 
                            Background="{Binding Instance.Player.Class, Converter={StaticResource StaminaColConv}}" 
                            Height="14" 
                            Margin="-14,2,0,0" 
                            VerticalAlignment="Top" 
                            CornerRadius="0,7,7,0" 
                            Visibility="{Binding Instance.Player.Class, Converter={StaticResource StaminaVisConv}}"
                            HorizontalAlignment="Left"
                            Padding="0,0,14,0"
                            Opacity=".8">
                            <FrameworkElement Width="{Binding ElementName=BarsMainGrid, Path=ActualWidth}" 
                                          Margin="0,0,0,0">
                                <FrameworkElement.LayoutTransform>
                                    <ScaleTransform ScaleX="{Binding Instance.Player.StFactor}"/>
                                </FrameworkElement.LayoutTransform>
                            </FrameworkElement>
                        </Border>
                        <Path Fill="{StaticResource DefaultBackgroundBrush}" 
                          Data="M0,0 2,0 1,1 0,0" 
                          Stretch="Uniform" 
                          HorizontalAlignment="Center" 
                          Grid.Row="0" 
                          VerticalAlignment="Top" 
                          Height="7"/>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Margin="0,-3,10,0"  FontWeight="Normal" Foreground="White" FontSize="13"
                                   HorizontalAlignment="Right">
                            <Run Text="{Binding Instance.Player.TotalHP, Mode=OneWay}"></Run>
                            </TextBlock>
                            <TextBlock Margin="10,-3,0,0"  FontWeight="Normal" Foreground="White" Opacity=".6"  FontSize="13" Grid.Column="1"
                                   HorizontalAlignment="Left">
                            <Run Text="{Binding Instance.Player.MaxHP}"></Run>
                            </TextBlock>

                            <TextBlock Margin="10,-3,0,0" FontWeight="Normal"  Foreground="White"
                                   Grid.Column="0"
                                   Text="{Binding Instance.Player.HpFactor, StringFormat=0.# %}" FontSize="13" HorizontalAlignment="Left"></TextBlock>
                        </Grid>
                        <Grid Grid.Row="1" Margin="0,0,0,-2" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Margin="0,-2.5,10,0"  FontWeight="Normal" Foreground="White" FontSize="13"
                                   HorizontalAlignment="Right">
                            <Run Text="{Binding Instance.Player.CurrentMP}"></Run>
                            </TextBlock>
                            <TextBlock Margin="10,-2,0,0"  FontWeight="Normal" Foreground="White" Opacity=".6"  FontSize="13" Grid.Column="1"
                                   HorizontalAlignment="Left">
                            <Run Text="{Binding Instance.Player.MaxMP}"></Run>
                            </TextBlock>

                        </Grid>
                        <Grid Grid.Row="2" 
                          Visibility="{Binding Instance.Player.Class, Converter={StaticResource StaminaVisConv}}"
                    >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Margin="0,0,0,-20"  FontWeight="Normal" 
                                                    Foreground="White" FontSize="13"
                                   HorizontalAlignment="Center" Text="{Binding Instance.Player.CurrentST}" Grid.ColumnSpan="2">

                            </TextBlock>
                        </Grid>

                    </Grid>
                </Border>
                <Border Grid.Row="1" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" Height="62" 
                    Style="{StaticResource DefaultBorderStyle}" CornerRadius="30,30,30,30" 
                    VerticalAlignment="Stretch" Margin="-20,-1,0,-1" Opacity="1" HorizontalAlignment="Left" Padding="6" BorderThickness="2" >

                    <Grid >
                        <c:Arc StrokeThickness="3" Stroke="Crimson" Margin="-8" EndAngle="359.9" Visibility="{Binding Instance.Player.IsInCombat, Converter={StaticResource BoolToVisibleHidden}}"></c:Arc>
                        <Image Name="LaurelIcon" Source="{Binding Instance.Player.Laurel, Converter={StaticResource LaurelToImage}}" Width="Auto" Height="Auto"
                           Margin="-6,-12,-6,-6" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="Uniform">
                            <Image.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="7" ShadowDepth="0" Opacity=".6"/>
                            </Image.Effect>
                        </Image>
                        <Rectangle Name="ClassIcon" Fill="White" Stretch="Uniform" Width="Auto" Height="Auto" Margin="2,3,2,-4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Rectangle.OpacityMask>
                                <ImageBrush ImageSource="{Binding Instance.Player.Class, Converter={StaticResource ClassToImageConverter}}"/>
                            </Rectangle.OpacityMask>
                            <Rectangle.Effect>
                                <DropShadowEffect Color="#ff20f0ff" BlurRadius="7" ShadowDepth="0"/>
                            </Rectangle.Effect>
                        </Rectangle>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
        <c:WindowButtons WindowName="Character window" x:Name="Buttons" DataContext="{Binding WindowSettings, RelativeSource={RelativeSource AncestorType=w:TccWidget}}" />
    </Grid>-->
</w:TccWidget>
