<UserControl x:Class="TCC.Controls.Skills.FixedSkillContainers"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:skills="clr-namespace:TCC.Controls.Skills"
             xmlns:vm="clr-namespace:TCC.ViewModels"
             xmlns:dd="urn:gong-wpf-dragdrop"
             Loaded="FixedSkillContainers_OnLoaded"
             PreviewMouseLeftButtonUp="UserControl_MouseLeftButtonUp"
             PreviewDragEnter="FixedSkillContainers_OnDragOver" MouseEnter="MainSkillsGrid_MouseEnter"
             MouseLeave="MainSkillsGrid_MouseLeave"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance vm:CooldownWindowViewModel}">
    <UserControl.Resources>
        <ControlTemplate x:Key="SquareDragableSkill" TargetType="{x:Type dragablz:DragablzItem}">
            <ControlTemplate.Resources>
                <SineEase x:Key="Ease" EasingMode="EaseInOut" />
            </ControlTemplate.Resources>
            <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
            <Grid RenderTransformOrigin=".5 .5" ToolTip="{Binding Skill.Name}" Margin="-2 0">
                <skills:SquareFixedSkillControl />
                <Rectangle Fill="#01000000" x:Name="Activator" Height="30" HorizontalAlignment="Stretch"
                           VerticalAlignment="Bottom" />
                <Thumb x:Name="Thumb" Visibility="Collapsed" dragablz:DragablzItem.IsCustomThumb="True" Cursor="None"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center" Margin="0 0 0 0">
                    <Thumb.Template>
                        <ControlTemplate>
                            <Grid Width="40" Height="20" Margin="0 0 0 0" VerticalAlignment="Center" Cursor="SizeWE"
                                  HorizontalAlignment="Stretch" Background="#01000000">
                                <!--<Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="20"/>
                                                            <ColumnDefinition Width="15"/>
                                                            <ColumnDefinition Width="20"/>
                                                        </Grid.ColumnDefinitions>-->
                                <!--<Rectangle RadiusX="10" RadiusY="10" Fill="White"  Margin="0" Effect="{StaticResource dropShadow}" Grid.Column="0"></Rectangle>
                                                        <Rectangle RadiusX="10" RadiusY="10" Fill="White"  Margin="0" Effect="{StaticResource dropShadow}" Grid.Column="2"></Rectangle>-->
                                <!--<Rectangle RadiusX="2" RadiusY="2" Fill="#01000000"  Grid.ColumnSpan="3"></Rectangle>-->
                                <!--<Path Data="M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z" Fill="White"  Stretch="Uniform" Effect="{StaticResource dropShadow}" Margin="0 3 4 3" HorizontalAlignment="Left" Grid.Column="0"></Path>
                                                        <Path Data="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z" Fill="White" Stretch="Uniform" Effect="{StaticResource dropShadow}" Margin="4 3 0 3" HorizontalAlignment="Right" Grid.Column="2"></Path>-->
                            </Grid>
                        </ControlTemplate>
                    </Thumb.Template>

                </Thumb>
                <Grid.RenderTransform>
                    <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1" />
                </Grid.RenderTransform>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDragging" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform"
                                                               Storyboard.TargetProperty="ScaleX">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.12"
                                                          EasingFunction="{StaticResource Ease}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform"
                                                               Storyboard.TargetProperty="ScaleY">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.12"
                                                          EasingFunction="{StaticResource Ease}" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform"
                                                               Storyboard.TargetProperty="ScaleX">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"
                                                          EasingFunction="{StaticResource Ease}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform"
                                                               Storyboard.TargetProperty="ScaleY">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"
                                                          EasingFunction="{StaticResource Ease}" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger SourceName="Activator" Property="IsMouseOver" Value="True">
                    <Setter TargetName="Thumb" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True" SourceName="Thumb">
                    <Setter TargetName="Thumb" Property="Visibility" Value="Visible" />
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="RoundDragableSkill" TargetType="{x:Type dragablz:DragablzItem}">
            <ControlTemplate.Resources>
                <SineEase x:Key="Ease" EasingMode="EaseInOut" />
            </ControlTemplate.Resources>
            <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
            <Grid RenderTransformOrigin=".5 .5" ToolTip="{Binding Skill.Name}" Margin="-2 0">
                <skills:RoundFixedSkillControl />
                <Rectangle Fill="#01000000" x:Name="Activator" Height="30" HorizontalAlignment="Stretch"
                           VerticalAlignment="Bottom" />
                <Thumb x:Name="Thumb" Visibility="Collapsed" dragablz:DragablzItem.IsCustomThumb="True" Cursor="None"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center" Margin="0 0 0 0">
                    <Thumb.Template>
                        <ControlTemplate>
                            <Grid Width="40" Height="20" Margin="0 0 0 0" VerticalAlignment="Center" Cursor="SizeWE"
                                  HorizontalAlignment="Stretch" Background="#01000000">
                                <!--<Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="20"/>
                                                            <ColumnDefinition Width="15"/>
                                                            <ColumnDefinition Width="20"/>
                                                        </Grid.ColumnDefinitions>-->
                                <!--<Rectangle RadiusX="10" RadiusY="10" Fill="White"  Margin="0" Effect="{StaticResource dropShadow}" Grid.Column="0"></Rectangle>
                                                        <Rectangle RadiusX="10" RadiusY="10" Fill="White"  Margin="0" Effect="{StaticResource dropShadow}" Grid.Column="2"></Rectangle>-->
                                <!--<Rectangle RadiusX="2" RadiusY="2" Fill="#01000000"  Grid.ColumnSpan="3"></Rectangle>-->
                                <!--<Path Data="M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z" Fill="White"  Stretch="Uniform" Effect="{StaticResource dropShadow}" Margin="0 3 4 3" HorizontalAlignment="Left" Grid.Column="0"></Path>
                                                        <Path Data="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z" Fill="White" Stretch="Uniform" Effect="{StaticResource dropShadow}" Margin="4 3 0 3" HorizontalAlignment="Right" Grid.Column="2"></Path>-->
                            </Grid>
                        </ControlTemplate>
                    </Thumb.Template>

                </Thumb>
                <Grid.RenderTransform>
                    <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1" />
                </Grid.RenderTransform>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDragging" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform"
                                                               Storyboard.TargetProperty="ScaleX">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.12"
                                                          EasingFunction="{StaticResource Ease}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform"
                                                               Storyboard.TargetProperty="ScaleY">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.12"
                                                          EasingFunction="{StaticResource Ease}" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform"
                                                               Storyboard.TargetProperty="ScaleX">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"
                                                          EasingFunction="{StaticResource Ease}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform"
                                                               Storyboard.TargetProperty="ScaleY">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"
                                                          EasingFunction="{StaticResource Ease}" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger SourceName="Activator" Property="IsMouseOver" Value="True">
                    <Setter TargetName="Thumb" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True" SourceName="Thumb">
                    <Setter TargetName="Thumb" Property="Visibility" Value="Visible" />
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- ReSharper disable Xaml.RedundantResource -->
        <Style x:Key="RoundDragableStyle" TargetType="dragablz:DragablzItem">
            <Setter Property="Padding" Value="0 4 0 4" />
            <Setter Property="Margin" Value="0 0 0 0" />
            <Setter Property="Template" Value="{StaticResource RoundDragableSkill}" />
        </Style>
        <Style x:Key="SquareDragableStyle" TargetType="dragablz:DragablzItem">
            <Setter Property="Padding" Value="0 4 0 4" />
            <Setter Property="Margin" Value="0 0 0 0" />
            <Setter Property="Template" Value="{StaticResource SquareDragableSkill}" />
        </Style>
        <!-- ReSharper restore Xaml.RedundantResource -->
    </UserControl.Resources>
    <Grid Margin="4" UseLayoutRounding="True" HorizontalAlignment="Left">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!--Main DefaultBorderStyle-->
        <Grid Grid.Row="1" Grid.RowSpan="2" Width="{Binding ElementName=MainSkillsGrid, Path=ActualWidth}" >
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Border Style="{StaticResource DefaultBorderStyle}" Opacity=".5" Grid.Row="0" Margin="-4 0 0 0" CornerRadius="29"
                    x:Name="MainBorder" Effect="{x:Null}" VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch" />
            <Border Style="{StaticResource DefaultBorderStyle}" Opacity=".3"  Margin="-2 0 2 0" CornerRadius="29"
                    PreviewDragLeave="FixedSkillContainers_OnDragLeave" Grid.RowSpan="2" Grid.Row="0" Effect="{x:Null}"  
                    x:Name="MainBorderSec" HorizontalAlignment="Stretch" />

        </Grid>
        <Button Style="{StaticResource ButtonContentOpacityStyle}" Click="OpenCooldownSettings" ToolTip="Configure skills" VerticalAlignment="Bottom" x:Name="SettingsButton" Opacity="0">
            <Path Data="{StaticResource SvgSettings}"/>
        </Button>
        <!--<Button Width="20" Click="ButtonBase_OnClick"></Button>-->
        <!--Main skills grid-->
        <Grid Grid.Row="1" Width="Auto" Height="Auto" HorizontalAlignment="Left" 
              Background="#00000000" 
              VerticalAlignment="Center" Margin="-2 0" x:Name="MainSkillsGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Popup IsOpen="False" Placement="Mouse" MinWidth="220" MaxHeight="300" AllowsTransparency="True"
                   x:Name="SelectionPopup" MouseLeave="SelectionPopup_MouseLeave" Margin="10">
                <Popup.Resources>
                    <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource NormalScrollBar}" />
                </Popup.Resources>
                <ListBox SelectionChanged="ListBox_SelectionChanged" SelectionMode="Single" Padding="5"
                         ScrollViewer.CanContentScroll="True"
                         Background="{StaticResource DefaultBackgroundBrush}" BorderThickness="0"
                         Effect="{StaticResource DropShadow}" Margin="15" x:Name="ChoiceListBox"
                         ItemTemplate="{StaticResource SkillDataTemplate}">
                </ListBox>
            </Popup>

            <dragablz:DragablzItemsControl Grid.Row="0" Grid.Column="0" Name="MainSkills"
                                           ItemsSource="{Binding Instance.MainSkills}" Background="Transparent"
                                           VerticalAlignment="Top" HorizontalAlignment="Left" BorderThickness="0"
                                           BorderBrush="Red" Margin="0" MinWidth="60" MinHeight="60"
                                           dd:DragDrop.IsDropTarget="True"
                                           Drop="MainSkills_OnDrop"
                                           dd:DragDrop.DropHandler="{Binding DropHandler, RelativeSource={RelativeSource AncestorType=skills:FixedSkillContainers}}"
                                           dd:DragDrop.ItemsPanelOrientation="Horizontal">
                <dragablz:DragablzItemsControl.ItemContainerStyle>
                    <Style TargetType="dragablz:DragablzItem">
                        <Setter Property="Padding" Value="0 4 0 4" />
                        <Setter Property="Margin" Value="0 0 0 0" />
                    </Style>
                </dragablz:DragablzItemsControl.ItemContainerStyle>
                <dragablz:DragablzItemsControl.ItemsOrganiser>
                    <dragablz:HorizontalOrganiser />
                </dragablz:DragablzItemsControl.ItemsOrganiser>
                <dragablz:DragablzItemsControl.PositionMonitor>
                    <dragablz:HorizontalPositionMonitor  OrderChanged="MainSkillOrderChanged" />
                </dragablz:DragablzItemsControl.PositionMonitor>

            </dragablz:DragablzItemsControl>
            <Grid IsHitTestVisible="False" Grid.Row="0" Grid.ColumnSpan="2" Grid.Column="0" HorizontalAlignment="Right" Cursor="Hand"
                  Opacity="0" x:Name="AddButtonGrid" 
                  MouseLeftButtonDown="AddButtonPressed">
                <Path Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" Stretch="Uniform" Width="20" Fill="#9fff" />
                <Ellipse Width="50" Margin="5 0 5 0" Height="50" Stroke="#3fff" Fill="#1fff" StrokeThickness="1" />
            </Grid>
            <Grid Grid.Row="0" Grid.Column="1" Width="58" x:Name="Spacer">
                <Grid.LayoutTransform>
                    <ScaleTransform ScaleX="0" />
                </Grid.LayoutTransform>
            </Grid>

        </Grid>

        <!--Secondary + other skills grid-->
        <Grid Grid.Row="2" Width="Auto" Height="{Binding ElementName=MainSkills, Path=ActualHeight}"
              HorizontalAlignment="Left"
              VerticalAlignment="Center" UseLayoutRounding="False" Opacity=".9"
              x:Name="SecSkillsGrid"
              >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <!--Secondary skills-->
            <!--<ItemsControl Name="secSkills" ItemTemplate="{StaticResource FixedSkillIndicator}" Width="Auto" 
                          VerticalAlignment="Stretch" ItemsSource="{Binding Instance.SecondarySkills}" BorderBrush="Orange" BorderThickness="0">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="{Binding SecondarySkills.Count}" Rows="1" Margin="0,0,0,0" IsItemsHost="True" 
                                     Width="Auto" Height="Auto" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>-->
            <dragablz:DragablzItemsControl Name="SecSkills" ItemsSource="{Binding Instance.SecondarySkills}" Grid.Column="0"
                                           VerticalAlignment="Top" HorizontalAlignment="Left" BorderThickness="0"
                                           BorderBrush="Red" Margin="0"
                                           dd:DragDrop.IsDropTarget="True"
                                           dd:DragDrop.DropHandler="{Binding DropHandler, RelativeSource={RelativeSource AncestorType=skills:FixedSkillContainers}}"
                                           Background="Transparent" PreviewDrop="FixedSkillContainers_OnDragLeave">
                <dragablz:DragablzItemsControl.ItemContainerStyle>
                    <Style TargetType="dragablz:DragablzItem">
                        <Setter Property="Padding" Value="0 4 0 4" />
                        <Setter Property="Margin" Value="0 0 0 0" />
                    </Style>
                </dragablz:DragablzItemsControl.ItemContainerStyle>
                <dragablz:DragablzItemsControl.ItemsOrganiser>
                    <dragablz:HorizontalOrganiser />
                </dragablz:DragablzItemsControl.ItemsOrganiser>
                <dragablz:DragablzItemsControl.PositionMonitor>
                    <dragablz:HorizontalPositionMonitor OrderChanged="SecondarySkillOrderChanged" />
                </dragablz:DragablzItemsControl.PositionMonitor>
            </dragablz:DragablzItemsControl>
            <Grid Grid.ColumnSpan="2" Grid.Column="0" HorizontalAlignment="Right" Cursor="Hand" Opacity="0" IsHitTestVisible="False"
                  x:Name="AddButtonGrid2" Margin="0 0 0 0"
                  MouseLeftButtonDown="AddButtonPressed">
                <Path Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" Stretch="Uniform" Width="20" Fill="#9fff" />
                <Ellipse Width="50" Margin="5 0 5 0" Height="50" Stroke="#3fff" Fill="#1fff" StrokeThickness="1" />
            </Grid>
            <Grid Grid.Column="1" Width="58" x:Name="Spacer2">
                <Grid.LayoutTransform>
                    <ScaleTransform ScaleX="0" />
                </Grid.LayoutTransform>
            </Grid>

            <!--Other skills-->
            <ItemsControl Name="OtherSkills" ItemTemplateSelector="{StaticResource NormalSkillTemplateSelector}" Width="Auto"
                          VerticalAlignment="Stretch"
                          Grid.Column="2" HorizontalAlignment="Left" ItemsSource="{Binding Instance.OtherSkills}"
                          BorderBrush="Green" BorderThickness="0">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Margin="0,0,0,0" IsItemsHost="True" Width="Auto" Height="Auto"
                                    Orientation="Horizontal"
                                    HorizontalAlignment="Left" VerticalAlignment="Center" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>

        </Grid>
        <!--Item skills grid-->
        <Grid Grid.Row="0" UseLayoutRounding="True" >
            <ItemsControl Name="ItemSkills" ItemTemplateSelector="{StaticResource NormalSkillTemplateSelector}" Width="Auto"
                          Height="50" VerticalAlignment="Stretch"
                          HorizontalAlignment="Right" ItemsSource="{Binding ItemSkills}" BorderBrush="Red"
                          BorderThickness="00" Grid.Row="0"
                          Visibility="{Binding ShowItems, Converter={StaticResource BoolToVisibleHidden}}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Margin="0,0,0,0" IsItemsHost="True" Width="Auto" Height="Auto"
                                    FlowDirection="RightToLeft"
                                    Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="LayoutTransform">
                            <Setter.Value>
                                <ScaleTransform ScaleX=".85" ScaleY=".85" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="FlowDirection" Value="LeftToRight" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
            <!--<Grid.CacheMode>
                <BitmapCache RenderAtScale="2"></BitmapCache>
            </Grid.CacheMode>-->
        </Grid>

        <!--<Grid.CacheMode>
            <BitmapCache RenderAtScale="2"></BitmapCache>
        </Grid.CacheMode>-->
    </Grid>
</UserControl>

